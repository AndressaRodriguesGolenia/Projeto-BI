services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: my-laravel-app
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - app-network
    depends_on:
      - db
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
  node:
    image: node:14
    volumes:
      - ./src:/var/www/html/html   # Mapeia o diretório atual do host para /var/www/html/html no container
    working_dir: /var/www/html/html
    command: npm run dev  # Comando npm para watch, dev ou prod conforme necessário

  artisan-serve:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan-serve
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - app-network
    depends_on:
      - db
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    command: php artisan serve --host=127.0.0.1 --port=8000

  web:
    image: nginx:alpine
    container_name: web
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/conf.d/fastcgi-php.conf:/etc/nginx/snippets/fastcgi-php.conf  
    networks:
      - app-network
    depends_on:
      - app

  db:
    image: postgres:13
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: laravel
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
